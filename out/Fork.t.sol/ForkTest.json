{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testForkIdDiffer",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604081905260008054600160ff19918216811783556004805490921617905563f877cb1960e01b82526020608452600b60a4526a149410d7d350525393915560aa1b60c452737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f877cb199160e491606481865afa1580156200007d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000a7919081019062000188565b601d90620000b69082620002ec565b5060405163f877cb1960e01b815260206004820152600c60248201526b5250435f4f5054494d49534d60a01b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f877cb1990606401600060405180830381865afa15801562000124573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200014e919081019062000188565b601e906200015d9082620002ec565b503480156200016b57600080fd5b50620003b8565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200019c57600080fd5b82516001600160401b0380821115620001b457600080fd5b818501915085601f830112620001c957600080fd5b815181811115620001de57620001de62000172565b604051601f8201601f19908116603f0116810190838211818310171562000209576200020962000172565b8160405282815288868487010111156200022257600080fd5b600093505b8284101562000246578484018601518185018701529285019262000227565b600086848301015280965050505050505092915050565b600181811c908216806200027257607f821691505b6020821081036200029357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e757600081815260208120601f850160051c81016020861015620002c25750805b601f850160051c820191505b81811015620002e357828155600101620002ce565b5050505b505050565b81516001600160401b0381111562000308576200030862000172565b62000320816200031984546200025d565b8462000299565b602080601f8311600181146200035857600084156200033f5750858301515b600019600386901b1c1916600185901b178555620002e3565b600085815260208120601f198616915b82811015620003895788860151825594840194600190910190840162000368565b5085821015620003a85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d1680620003c86000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806385226c8111610081578063ba414fa61161005b578063ba414fa614610153578063e20c9f711461016b578063fa7626d41461017357600080fd5b806385226c811461012e578063916a17c614610143578063b5508aa91461014b57600080fd5b80633f7286f4116100b25780633f7286f41461010957806366d9a9a0146101115780636cf73eea1461012657600080fd5b80630a9254e4146100d95780631ed7831c146100e35780633e5e3c2314610101575b600080fd5b6100e1610180565b005b6100eb61029f565b6040516100f8919061093d565b60405180910390f35b6100eb610301565b6100eb610361565b6101196103c1565b6040516100f8919061098a565b6100e16104b0565b6101366104c5565b6040516100f89190610aa5565b610119610595565b61013661067b565b61015b61074b565b60405190151581526020016100f8565b6100eb610876565b60005461015b9060ff1681565b6101a1604051806060016040528060238152602001610cbe602391396108d6565b604051630637469360e31b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba3498906101d990601d90600401610b41565b6020604051808303816000875af11580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c9190610bed565b601b55604051630637469360e31b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba34989061025790601e90600401610b41565b6020604051808303816000875af1158015610276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029a9190610bed565b601c55565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102f757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102d9575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102f7576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102d9575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102f7576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102d9575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104a75760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561048f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116104515790505b505050505081525050815260200190600101906103e5565b50505050905090565b601c54601b54036104c3576104c3610c06565b565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156104a757838290600052602060002001805461050890610b07565b80601f016020809104026020016040519081016040528092919081815260200182805461053490610b07565b80156105815780601f1061055657610100808354040283529160200191610581565b820191906000526020600020905b81548152906001019060200180831161056457829003601f168201915b5050505050815260200190600101906104e9565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156104a75760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561066357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106255790505b505050505081525050815260200190600101906105b9565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156104a75783829060005260206000200180546106be90610b07565b80601f01602080910402602001604051908101604052809291908181526020018280546106ea90610b07565b80156107375780601f1061070c57610100808354040283529160200191610737565b820191906000526020600020905b81548152906001019060200180831161071a57829003601f168201915b50505050508152602001906001019061069f565b60008054610100900460ff161561076b5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156108715760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916107f9917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610c1c565b60408051601f198184030181529082905261081391610c65565b6000604051808303816000865af19150503d8060008114610850576040519150601f19603f3d011682016040523d82523d6000602084013e610855565b606091505b509150508080602001905181019061086d9190610c81565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102f7576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102d9575050505050905090565b610919816040516024016108ea9190610caa565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261091c565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6020808252825182820181905260009190848201906040850190845b8181101561097e5783516001600160a01b031683529284019291840191600101610959565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610a4657898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610a315783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906109ef565b50978a019795505050918701916001016109b2565b50919998505050505050505050565b60005b83811015610a70578181015183820152602001610a58565b50506000910152565b60008151808452610a91816020860160208601610a55565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610afa57603f19888603018452610ae8858351610a79565b94509285019290850190600101610acc565b5092979650505050505050565b600181811c90821680610b1b57607f821691505b602082108103610b3b57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208083526000845481600182811c915080831680610b6357607f831692505b8583108103610b8057634e487b7160e01b85526022600452602485fd5b878601838152602001818015610b9d5760018114610bb357610bde565b60ff198616825284151560051b82019650610bde565b60008b81526020902060005b86811015610bd857815484820152908501908901610bbf565b83019750505b50949998505050505050505050565b600060208284031215610bff57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000831681528151600090610c57816004850160208701610a55565b919091016004019392505050565b60008251610c77818460208701610a55565b9190910192915050565b600060208284031215610c9357600080fd5b81518015158114610ca357600080fd5b9392505050565b602081526000610ca36020830184610a7956fe5365747570204d61696e6e657420616e64204f7074696d69736d20666f726b732e2e2ea2646970667358221220db11bf8cc75d7bd55c35e771233e8b517ca76d6f3fdf493e81cb648cf8c0302164736f6c63430008120033",
    "sourceMap": "242:2136:25:-:0;;;;;1572:26:6;;;1594:4;-1:-1:-1;;1572:26:6;;;;;;;3288:44:9;;;;;;;;;-1:-1:-1;;;789:27:25;;216:2:30;789:27:25;198:21:30;255:2;235:18;228:30;-1:-1:-1;;;274:18:30;267:41;789:12:25;;;;325:18:30;;789:27:25;242:2136;789:12;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;789:27:25;;;;;;;;;;;;:::i;:::-;763:53;;;;;;:::i;:::-;-1:-1:-1;853:28:25;;-1:-1:-1;;;853:28:25;;4324:2:30;853:28:25;;;4306:21:30;4363:2;4343:18;;;4336:30;-1:-1:-1;;;4382:18:30;;;4375:42;853:12:25;;;;4434:18:30;;853:28:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;853:28:25;;;;;;;;;;;;:::i;:::-;826:55;;;;;;:::i;:::-;;242:2136;;;;;;;;;;;;354:127:30;415:10;410:3;406:20;403:1;396:31;446:4;443:1;436:15;470:4;467:1;460:15;486:1042;566:6;597:2;640;628:9;619:7;615:23;611:32;608:52;;;656:1;653;646:12;608:52;683:16;;-1:-1:-1;;;;;748:14:30;;;745:34;;;775:1;772;765:12;745:34;813:6;802:9;798:22;788:32;;858:7;851:4;847:2;843:13;839:27;829:55;;880:1;877;870:12;829:55;909:2;903:9;931:2;927;924:10;921:36;;;937:18;;:::i;:::-;1012:2;1006:9;980:2;1066:13;;-1:-1:-1;;1062:22:30;;;1086:2;1058:31;1054:40;1042:53;;;1110:18;;;1130:22;;;1107:46;1104:72;;;1156:18;;:::i;:::-;1196:10;1192:2;1185:22;1231:2;1223:6;1216:18;1271:7;1266:2;1261;1257;1253:11;1249:20;1246:33;1243:53;;;1292:1;1289;1282:12;1243:53;1314:1;1305:10;;1324:129;1338:2;1335:1;1332:9;1324:129;;;1426:10;;;1422:19;;1416:26;1395:14;;;1391:23;;1384:59;1349:10;;;;1324:129;;;1495:1;1490:2;1485;1477:6;1473:15;1469:24;1462:35;1516:6;1506:16;;;;;;;;486:1042;;;;:::o;1533:380::-;1612:1;1608:12;;;;1655;;;1676:61;;1730:4;1722:6;1718:17;1708:27;;1676:61;1783:2;1775:6;1772:14;1752:18;1749:38;1746:161;;1829:10;1824:3;1820:20;1817:1;1810:31;1864:4;1861:1;1854:15;1892:4;1889:1;1882:15;1746:161;;1533:380;;;:::o;2044:545::-;2146:2;2141:3;2138:11;2135:448;;;2182:1;2207:5;2203:2;2196:17;2252:4;2248:2;2238:19;2322:2;2310:10;2306:19;2303:1;2299:27;2293:4;2289:38;2358:4;2346:10;2343:20;2340:47;;;-1:-1:-1;2381:4:30;2340:47;2436:2;2431:3;2427:12;2424:1;2420:20;2414:4;2410:31;2400:41;;2491:82;2509:2;2502:5;2499:13;2491:82;;;2554:17;;;2535:1;2524:13;2491:82;;;2495:3;;;2135:448;2044:545;;;:::o;2765:1352::-;2885:10;;-1:-1:-1;;;;;2907:30:30;;2904:56;;;2940:18;;:::i;:::-;2969:97;3059:6;3019:38;3051:4;3045:11;3019:38;:::i;:::-;3013:4;2969:97;:::i;:::-;3121:4;;3185:2;3174:14;;3202:1;3197:663;;;;3904:1;3921:6;3918:89;;;-1:-1:-1;3973:19:30;;;3967:26;3918:89;-1:-1:-1;;2722:1:30;2718:11;;;2714:24;2710:29;2700:40;2746:1;2742:11;;;2697:57;4020:81;;3167:944;;3197:663;1991:1;1984:14;;;2028:4;2015:18;;-1:-1:-1;;3233:20:30;;;3351:236;3365:7;3362:1;3359:14;3351:236;;;3454:19;;;3448:26;3433:42;;3546:27;;;;3514:1;3502:14;;;;3381:19;;3351:236;;;3355:3;3615:6;3606:7;3603:19;3600:201;;;3676:19;;;3670:26;-1:-1:-1;;3759:1:30;3755:14;;;3771:3;3751:24;3747:37;3743:42;3728:58;3713:74;;3600:201;-1:-1:-1;;;;;3847:1:30;3831:14;;;3827:22;3814:36;;-1:-1:-1;2765:1352:30:o;4122:336::-;242:2136:25;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c806385226c8111610081578063ba414fa61161005b578063ba414fa614610153578063e20c9f711461016b578063fa7626d41461017357600080fd5b806385226c811461012e578063916a17c614610143578063b5508aa91461014b57600080fd5b80633f7286f4116100b25780633f7286f41461010957806366d9a9a0146101115780636cf73eea1461012657600080fd5b80630a9254e4146100d95780631ed7831c146100e35780633e5e3c2314610101575b600080fd5b6100e1610180565b005b6100eb61029f565b6040516100f8919061093d565b60405180910390f35b6100eb610301565b6100eb610361565b6101196103c1565b6040516100f8919061098a565b6100e16104b0565b6101366104c5565b6040516100f89190610aa5565b610119610595565b61013661067b565b61015b61074b565b60405190151581526020016100f8565b6100eb610876565b60005461015b9060ff1681565b6101a1604051806060016040528060238152602001610cbe602391396108d6565b604051630637469360e31b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba3498906101d990601d90600401610b41565b6020604051808303816000875af11580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c9190610bed565b601b55604051630637469360e31b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba34989061025790601e90600401610b41565b6020604051808303816000875af1158015610276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029a9190610bed565b601c55565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102f757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102d9575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102f7576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102d9575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102f7576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102d9575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104a75760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561048f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116104515790505b505050505081525050815260200190600101906103e5565b50505050905090565b601c54601b54036104c3576104c3610c06565b565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156104a757838290600052602060002001805461050890610b07565b80601f016020809104026020016040519081016040528092919081815260200182805461053490610b07565b80156105815780601f1061055657610100808354040283529160200191610581565b820191906000526020600020905b81548152906001019060200180831161056457829003601f168201915b5050505050815260200190600101906104e9565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156104a75760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561066357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106255790505b505050505081525050815260200190600101906105b9565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156104a75783829060005260206000200180546106be90610b07565b80601f01602080910402602001604051908101604052809291908181526020018280546106ea90610b07565b80156107375780601f1061070c57610100808354040283529160200191610737565b820191906000526020600020905b81548152906001019060200180831161071a57829003601f168201915b50505050508152602001906001019061069f565b60008054610100900460ff161561076b5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156108715760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916107f9917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610c1c565b60408051601f198184030181529082905261081391610c65565b6000604051808303816000865af19150503d8060008114610850576040519150601f19603f3d011682016040523d82523d6000602084013e610855565b606091505b509150508080602001905181019061086d9190610c81565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102f7576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102d9575050505050905090565b610919816040516024016108ea9190610caa565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261091c565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6020808252825182820181905260009190848201906040850190845b8181101561097e5783516001600160a01b031683529284019291840191600101610959565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610a4657898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610a315783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906109ef565b50978a019795505050918701916001016109b2565b50919998505050505050505050565b60005b83811015610a70578181015183820152602001610a58565b50506000910152565b60008151808452610a91816020860160208601610a55565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610afa57603f19888603018452610ae8858351610a79565b94509285019290850190600101610acc565b5092979650505050505050565b600181811c90821680610b1b57607f821691505b602082108103610b3b57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208083526000845481600182811c915080831680610b6357607f831692505b8583108103610b8057634e487b7160e01b85526022600452602485fd5b878601838152602001818015610b9d5760018114610bb357610bde565b60ff198616825284151560051b82019650610bde565b60008b81526020902060005b86811015610bd857815484820152908501908901610bbf565b83019750505b50949998505050505050505050565b600060208284031215610bff57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000831681528151600090610c57816004850160208701610a55565b919091016004019392505050565b60008251610c77818460208701610a55565b9190910192915050565b600060208284031215610c9357600080fd5b81518015158114610ca357600080fd5b9392505050565b602081526000610ca36020830184610a7956fe5365747570204d61696e6e657420616e64204f7074696d69736d20666f726b732e2e2ea2646970667358221220db11bf8cc75d7bd55c35e771233e8b517ca76d6f3fdf493e81cb648cf8c0302164736f6c63430008120033",
    "sourceMap": "242:2136:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;889:202;;;:::i;:::-;;2161:134:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;1139:92:25:-;;;:::i;2301:140:12:-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:6:-;;;:::i;:::-;;;3965:14:30;;3958:22;3940:41;;3928:2;3913:18;1819:584:6;3800:187:30;2013:142:12;;;:::i;1572:26:6:-;;;;;;;;;889:202:25;919:51;;;;;;;;;;;;;;;;;;:12;:51::i;:::-;996:30;;-1:-1:-1;;;996:30:25;;:13;;;;:30;;1010:15;;996:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;982:11;:44;1051:31;;-1:-1:-1;;;1051:31:25;;:13;;;;:31;;1065:16;;1051:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1036:12;:46;889:202::o;2161:134:12:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:12;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:12;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:12;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;1139:92:25:-;1211:12;;1196:11;;:27;1189:35;;;;:::i;:::-;1139:92::o;2301:140:12:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:6;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:6;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6228:74:30;;;-1:-1:-1;;;6318:18:30;;;6311:34;2196:43:6;;;;;;;;;6201:18:30;;;2196:43:6;;;-1:-1:-1;;1671:64:6;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:6;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:6:o;2013:142:12:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:12;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;6228:121:21:-;6283:59;6338:2;6299:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6299:42:21;;;;;;;;;;;;;;-1:-1:-1;;;;;6299:42:21;-1:-1:-1;;;6299:42:21;;;6283:15;:59::i;:::-;6228:121;:::o;641:376::-;735:14;;591:42;908:2;895:16;;711:21;;735:14;895:16;591:42;944:5;933:68;924:77;;861:150;;641:376;:::o;180:681:30:-;351:2;403:21;;;473:13;;376:18;;;495:22;;;322:4;;351:2;574:15;;;;548:2;533:18;;;322:4;617:218;631:6;628:1;625:13;617:218;;;696:13;;-1:-1:-1;;;;;692:62:30;680:75;;810:15;;;;775:12;;;;653:1;646:9;617:218;;;-1:-1:-1;852:3:30;;180:681;-1:-1:-1;;;;;;180:681:30:o;866:1590::-;1068:4;1097:2;1137;1126:9;1122:18;1167:2;1156:9;1149:21;1190:6;1225;1219:13;1256:6;1248;1241:22;1282:2;1272:12;;1315:2;1304:9;1300:18;1293:25;;1377:2;1367:6;1364:1;1360:14;1349:9;1345:30;1341:39;1415:2;1407:6;1403:15;1436:1;1457;1467:960;1483:6;1478:3;1475:15;1467:960;;;1552:22;;;-1:-1:-1;;1548:36:30;1536:49;;1608:13;;1695:9;;-1:-1:-1;;;;;1691:58:30;1676:74;;1789:11;;1783:18;1821:15;;;1814:27;;;1902:19;;1648:15;;;1934:24;;;2024:21;;;;2069:1;;1992:2;1980:15;;;2083:236;2099:8;2094:3;2091:17;2083:236;;;2180:15;;2197:20;2176:42;2162:57;;2288:17;;;;2127:1;2118:11;;;;;2245:14;;;;2083:236;;;-1:-1:-1;2405:12:30;;;;2342:5;-1:-1:-1;;;2370:15:30;;;;1509:1;1500:11;1467:960;;;-1:-1:-1;2444:6:30;;866:1590;-1:-1:-1;;;;;;;;;866:1590:30:o;2461:250::-;2546:1;2556:113;2570:6;2567:1;2564:13;2556:113;;;2646:11;;;2640:18;2627:11;;;2620:39;2592:2;2585:10;2556:113;;;-1:-1:-1;;2703:1:30;2685:16;;2678:27;2461:250::o;2716:271::-;2758:3;2796:5;2790:12;2823:6;2818:3;2811:19;2839:76;2908:6;2901:4;2896:3;2892:14;2885:4;2878:5;2874:16;2839:76;:::i;:::-;2969:2;2948:15;-1:-1:-1;;2944:29:30;2935:39;;;;2976:4;2931:50;;2716:271;-1:-1:-1;;2716:271:30:o;2992:803::-;3154:4;3183:2;3223;3212:9;3208:18;3253:2;3242:9;3235:21;3276:6;3311;3305:13;3342:6;3334;3327:22;3380:2;3369:9;3365:18;3358:25;;3442:2;3432:6;3429:1;3425:14;3414:9;3410:30;3406:39;3392:53;;3480:2;3472:6;3468:15;3501:1;3511:255;3525:6;3522:1;3519:13;3511:255;;;3618:2;3614:7;3602:9;3594:6;3590:22;3586:36;3581:3;3574:49;3646:40;3679:6;3670;3664:13;3646:40;:::i;:::-;3636:50;-1:-1:-1;3744:12:30;;;;3709:15;;;;3547:1;3540:9;3511:255;;;-1:-1:-1;3783:6:30;;2992:803;-1:-1:-1;;;;;;;2992:803:30:o;3992:380::-;4071:1;4067:12;;;;4114;;;4135:61;;4189:4;4181:6;4177:17;4167:27;;4135:61;4242:2;4234:6;4231:14;4211:18;4208:38;4205:161;;4288:10;4283:3;4279:20;4276:1;4269:31;4323:4;4320:1;4313:15;4351:4;4348:1;4341:15;4205:161;;3992:380;;;:::o;4503:1225::-;4612:4;4641:2;4670;4659:9;4652:21;4693:1;4726:6;4720:13;4756:3;4778:1;4806:9;4802:2;4798:18;4788:28;;4866:2;4855:9;4851:18;4888;4878:61;;4932:4;4924:6;4920:17;4910:27;;4878:61;4985:2;4977:6;4974:14;4954:18;4951:38;4948:165;;-1:-1:-1;;;5012:33:30;;5068:4;5065:1;5058:15;5098:4;5019:3;5086:17;4948:165;5180:18;;;112:19;;;164:4;155:14;5223:18;5250:128;;;;5392:1;5387:315;;;;5216:486;;5250:128;-1:-1:-1;;5283:24:30;;5271:37;;5351:14;;5344:22;5341:1;5337:30;5328:40;;;-1:-1:-1;5250:128:30;;5387:315;4450:1;4443:14;;;4487:4;4474:18;;5482:1;5496:165;5510:6;5507:1;5504:13;5496:165;;;5588:14;;5575:11;;;5568:35;5631:16;;;;5525:10;;5496:165;;;5681:11;;;-1:-1:-1;;5216:486:30;-1:-1:-1;5719:3:30;;4503:1225;-1:-1:-1;;;;;;;;;4503:1225:30:o;5733:184::-;5803:6;5856:2;5844:9;5835:7;5831:23;5827:32;5824:52;;;5872:1;5869;5862:12;5824:52;-1:-1:-1;5895:16:30;;5733:184;-1:-1:-1;5733:184:30:o;5922:127::-;5983:10;5978:3;5974:20;5971:1;5964:31;6014:4;6011:1;6004:15;6038:4;6035:1;6028:15;6356:384;6553:20;6541:33;;6529:46;;6598:13;;6511:3;;6620:74;6598:13;6683:1;6674:11;;6667:4;6655:17;;6620:74;:::i;:::-;6714:16;;;;6732:1;6710:24;;6356:384;-1:-1:-1;;;6356:384:30:o;6745:287::-;6874:3;6912:6;6906:13;6928:66;6987:6;6982:3;6975:4;6967:6;6963:17;6928:66;:::i;:::-;7010:16;;;;;6745:287;-1:-1:-1;;6745:287:30:o;7037:277::-;7104:6;7157:2;7145:9;7136:7;7132:23;7128:32;7125:52;;;7173:1;7170;7163:12;7125:52;7205:9;7199:16;7258:5;7251:13;7244:21;7237:5;7234:32;7224:60;;7280:1;7277;7270:12;7224:60;7303:5;7037:277;-1:-1:-1;;;7037:277:30:o;7319:220::-;7468:2;7457:9;7450:21;7431:4;7488:45;7529:2;7518:9;7514:18;7506:6;7488:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testForkIdDiffer()": "6cf73eea"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testForkIdDiffer\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Fork.t.sol\":\"ForkTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":750},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa9a389ae870e108986d72d760a792d011516a7091ab48da20a5982f8ae2e2575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6de722b90ec6b39fe65e121db1735234c8a123fd7bee0ed5daa646b0e6e14a5\",\"dweb:/ipfs/QmQfrW7sP3snKdoxtEVWh5CAxApwhBs6uLvDhiJLTza1Lp\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10\",\"dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"test/Fork.t.sol\":{\"keccak256\":\"0xfd36f0dbe7ba92f31d31d3b3e513e6190349f2991d16c046d6059a221b58a5b9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://433c4f3f386d88eea0b83a9971beef63b5e9251731908d324998f13710c4c053\",\"dweb:/ipfs/QmZrG1WCGGgynBWgf3EfXVbuRcoiytkMG4eF9CtJP7gK5S\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testForkIdDiffer"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 750
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Fork.t.sol": "ForkTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa9a389ae870e108986d72d760a792d011516a7091ab48da20a5982f8ae2e2575",
        "urls": [
          "bzz-raw://d6de722b90ec6b39fe65e121db1735234c8a123fd7bee0ed5daa646b0e6e14a5",
          "dweb:/ipfs/QmQfrW7sP3snKdoxtEVWh5CAxApwhBs6uLvDhiJLTza1Lp"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/Vm.sol": {
        "keccak256": "0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203",
        "urls": [
          "bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10",
          "dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "test/Fork.t.sol": {
        "keccak256": "0xfd36f0dbe7ba92f31d31d3b3e513e6190349f2991d16c046d6059a221b58a5b9",
        "urls": [
          "bzz-raw://433c4f3f386d88eea0b83a9971beef63b5e9251731908d324998f13710c4c053",
          "dweb:/ipfs/QmZrG1WCGGgynBWgf3EfXVbuRcoiytkMG4eF9CtJP7gK5S"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Fork.t.sol",
    "id": 30348,
    "exportedSymbols": {
      "DSTest": [
        2923
      ],
      "ForkTest": [
        30347
      ],
      "StdAssertions": [
        4397
      ],
      "StdChains": [
        5091
      ],
      "StdCheats": [
        7322
      ],
      "StdInvariant": [
        7612
      ],
      "StdStorage": [
        8362
      ],
      "StdStyle": [
        11006
      ],
      "StdUtils": [
        11813
      ],
      "Test": [
        11862
      ],
      "TestBase": [
        2983
      ],
      "Vm": [
        13174
      ],
      "console": [
        21238
      ],
      "console2": [
        29334
      ],
      "stdError": [
        7388
      ],
      "stdJson": [
        8188
      ],
      "stdMath": [
        8330
      ],
      "stdStorage": [
        9795
      ]
    },
    "nodeType": "SourceUnit",
    "src": "154:2225:25",
    "nodes": [
      {
        "id": 30292,
        "nodeType": "PragmaDirective",
        "src": "154:24:25",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 30293,
        "nodeType": "ImportDirective",
        "src": "180:28:25",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30348,
        "sourceUnit": 11863,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30294,
        "nodeType": "ImportDirective",
        "src": "209:32:25",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30348,
        "sourceUnit": 29335,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30347,
        "nodeType": "ContractDefinition",
        "src": "242:2136:25",
        "nodes": [
          {
            "id": 30298,
            "nodeType": "VariableDeclaration",
            "src": "310:19:25",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mainnetFork",
            "nameLocation": "318:11:25",
            "scope": 30347,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30297,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "310:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30300,
            "nodeType": "VariableDeclaration",
            "src": "335:20:25",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "optimismFork",
            "nameLocation": "343:12:25",
            "scope": 30347,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30299,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "335:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30306,
            "nodeType": "VariableDeclaration",
            "src": "763:53:25",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "MAINNET_RPC_URL",
            "nameLocation": "771:15:25",
            "scope": 30347,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 30301,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "763:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5250435f4d41494e4e4554",
                  "id": 30304,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "802:13:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_04a7151d91426ac5a7cace725258bebe1b5d6eeb02ab3aff4caeb7d3bf31de1b",
                    "typeString": "literal_string \"RPC_MAINNET\""
                  },
                  "value": "RPC_MAINNET"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_04a7151d91426ac5a7cace725258bebe1b5d6eeb02ab3aff4caeb7d3bf31de1b",
                    "typeString": "literal_string \"RPC_MAINNET\""
                  }
                ],
                "expression": {
                  "id": 30302,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2976,
                  "src": "789:2:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$13174",
                    "typeString": "contract Vm"
                  }
                },
                "id": 30303,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "792:9:25",
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 11986,
                "src": "789:12:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 30305,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "789:27:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30312,
            "nodeType": "VariableDeclaration",
            "src": "826:55:25",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "OPTIMISM_RPC_URL",
            "nameLocation": "834:16:25",
            "scope": 30347,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 30307,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "826:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5250435f4f5054494d49534d",
                  "id": 30310,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "866:14:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_465a5ba191822bc4c176f5c6181f313c5b143117fe63a14edb73755c983f0af4",
                    "typeString": "literal_string \"RPC_OPTIMISM\""
                  },
                  "value": "RPC_OPTIMISM"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_465a5ba191822bc4c176f5c6181f313c5b143117fe63a14edb73755c983f0af4",
                    "typeString": "literal_string \"RPC_OPTIMISM\""
                  }
                ],
                "expression": {
                  "id": 30308,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2976,
                  "src": "853:2:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$13174",
                    "typeString": "contract Vm"
                  }
                },
                "id": 30309,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "856:9:25",
                "memberName": "envString",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 11986,
                "src": "853:12:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                  "typeString": "function (string memory) view external returns (string memory)"
                }
              },
              "id": 30311,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "853:28:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_string_memory_ptr",
                "typeString": "string memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30336,
            "nodeType": "FunctionDefinition",
            "src": "889:202:25",
            "nodes": [],
            "body": {
              "id": 30335,
              "nodeType": "Block",
              "src": "913:178:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5365747570204d61696e6e657420616e64204f7074696d69736d20666f726b732e2e2e",
                        "id": 30318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "932:37:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c238cd402fe8135717a1305f78a6749f0062b99444fc50413f347582c42ce9b",
                          "typeString": "literal_string \"Setup Mainnet and Optimism forks...\""
                        },
                        "value": "Setup Mainnet and Optimism forks..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5c238cd402fe8135717a1305f78a6749f0062b99444fc50413f347582c42ce9b",
                          "typeString": "literal_string \"Setup Mainnet and Optimism forks...\""
                        }
                      ],
                      "expression": {
                        "id": 30315,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29334,
                        "src": "919:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$29334_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 30317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "928:3:25",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21848,
                      "src": "919:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 30319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "919:51:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30320,
                  "nodeType": "ExpressionStatement",
                  "src": "919:51:25"
                },
                {
                  "expression": {
                    "id": 30326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30321,
                      "name": "mainnetFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30298,
                      "src": "982:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30324,
                          "name": "MAINNET_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30306,
                          "src": "1010:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 30322,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2976,
                          "src": "996:2:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$13174",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 30323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "999:10:25",
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13042,
                        "src": "996:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 30325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "996:30:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "982:44:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30327,
                  "nodeType": "ExpressionStatement",
                  "src": "982:44:25"
                },
                {
                  "expression": {
                    "id": 30333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30328,
                      "name": "optimismFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30300,
                      "src": "1036:12:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30331,
                          "name": "OPTIMISM_RPC_URL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30312,
                          "src": "1065:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 30329,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2976,
                          "src": "1051:2:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$13174",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 30330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1054:10:25",
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13042,
                        "src": "1051:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 30332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1051:31:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1036:46:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30334,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:46:25"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "898:5:25",
            "parameters": {
              "id": 30313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "903:2:25"
            },
            "returnParameters": {
              "id": 30314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:0:25"
            },
            "scope": 30347,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30346,
            "nodeType": "FunctionDefinition",
            "src": "1139:92:25",
            "nodes": [],
            "body": {
              "id": 30345,
              "nodeType": "Block",
              "src": "1179:52:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30340,
                          "name": "mainnetFork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30298,
                          "src": "1196:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 30341,
                          "name": "optimismFork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30300,
                          "src": "1211:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1196:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30339,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1189:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 30343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:35:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30344,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:35:25"
                }
              ]
            },
            "functionSelector": "6cf73eea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testForkIdDiffer",
            "nameLocation": "1148:16:25",
            "parameters": {
              "id": 30337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:2:25"
            },
            "returnParameters": {
              "id": 30338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:25"
            },
            "scope": 30347,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30295,
              "name": "Test",
              "nameLocations": [
                "263:4:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11862,
              "src": "263:4:25"
            },
            "id": 30296,
            "nodeType": "InheritanceSpecifier",
            "src": "263:4:25"
          }
        ],
        "canonicalName": "ForkTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30347,
          11862,
          2983,
          2980,
          11813,
          7612,
          7322,
          6663,
          5091,
          4397,
          2923
        ],
        "name": "ForkTest",
        "nameLocation": "251:8:25",
        "scope": 30348,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 25
}